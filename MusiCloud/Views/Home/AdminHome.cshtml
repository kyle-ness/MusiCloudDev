
@{
    ViewData["Title"] = "Admin screen";
    Layout = "~/Views/Shared/_LoggedInLayout.cshtml";

}
<!-- welcom -->
<div class="category-links">
    <a href="">Welcome @User.Identity.Name</a>
</div>
<!-- top section -->
<div class="blog-item">
    <img src="~/img/blog/1.jpg" alt="">
    <h2>Dashboard Management</h2>
</div>
    <!-- buttons section -->
    <div class="container">
        <form>
            <a asp-controller="Artists" asp-action="Index" class="site-btn site-login">Edit Artists</a>
            <a asp-controller="Albums" asp-action="Index" class="site-btn site-login">Edit Songs</a>
            <a asp-controller="Songs" asp-action="Index" class="site-btn site-login">Edit Albums</a>
        </form>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
        <br>
    </div>


    <!-- atatics section -->
    <h1>Statistics</h1>
    <br>
    <div id="statistics__container" style="display: flex; flex-direction: column; justify-content: space-around;">

        <script src="https://d3js.org/d3.v5.min.js"></script>
        <style>
            .text {
                font-size: 15px;
                font-weight: bold;
                fill: black;
            }
        </style>

        <div id="graph1">
            <h3>Artist in MusiCloud By Genre</h3>
            <script>
        var width = 900, height = 700;
        var colors = d3.scaleOrdinal(d3.schemePastel1);
        var svg = d3.select("#graph1").append("svg")
            .attr("width", width).attr("height", height);
        var details = @(Html.Raw(@ViewBag.genres));
        var data = d3.pie().sort(null).value(function (d) { return d.Count;})(details);
        var segments = d3.arc()
            .innerRadius(0)
            .outerRadius(200)
            .padAngle(.05)
            .padRadius(50);
        var sections = svg.append("g").attr("transform", "translate(250,250)")
            .selectAll("path").data(data);
        sections.enter().append("path").attr("d", segments)
            .attr("fill", function (d) { return colors(d.data.Count); });
        var content = d3.select("g").selectAll("text").data(data);

        var legends = svg.append("g").attr("transform", "translate(500,100)")
            .selectAll(".legends").data(data);

        var legend = legends.enter().append("g")
            .classed("legends", true)
            .attr("transform", function (d, i) { return "translate(0," + (i + 1) * 30 + ")"; });

        legend.append("rect")
            .attr("width", 20)
            .attr("height", 20)
            .attr("fill", function (d) { return colors(d.data.Count); });

        legend.append("text")
            .text(function (d) { return d.data.Count + " from " + d.data.Genre; })
            .classed("text", true)
            .attr("x", 30)
            .attr("y", 14);
            </script>
        </div>
    </div>

    <div id="graph2">
        <h3>number of concerts for each city</h3>
        <script>
        var width = 900, height = 700;
        var colors = d3.scaleOrdinal(d3.schemePastel1);
        var svg = d3.select("#graph2").append("svg")
            .attr("width", width).attr("height", height);
        var details = @(Html.Raw(@ViewBag.places));
        var data = d3.pie().sort(null).value(function (d) { return d.Count;})(details);
        var segments = d3.arc()
            .innerRadius(0)
            .outerRadius(200)
            .padAngle(.05)
            .padRadius(50);
        var sections = svg.append("g").attr("transform", "translate(250,250)")
            .selectAll("path").data(data);
        sections.enter().append("path").attr("d", segments)
            .attr("fill", function (d) { return colors(d.data.Count); });
        var content = d3.select("g").selectAll("text").data(data);

        var legends = svg.append("g").attr("transform", "translate(500,100)")
            .selectAll(".legends").data(data);

        var legend = legends.enter().append("g")
            .classed("legends", true)
            .attr("transform", function (d, i) { return "translate(0," + (i + 1) * 30 + ")"; });

        legend.append("rect")
            .attr("width", 20)
            .attr("height", 20)
            .attr("fill", function (d) { return colors(d.data.Count); });

        legend.append("text")
            .text(function (d) { return d.data.Count + " from " + d.data.City; })
            .classed("text", true)
            .attr("x", 30)
            .attr("y", 14);
        </script>
    </div>



























